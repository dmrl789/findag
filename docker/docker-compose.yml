version: '3.8'

services:
  findag:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: findag-node
    ports:
      - "8080:8080"  # API
      - "9090:9090"  # Metrics
    environment:
      - NODE_ENV=production
      - ADMIN_USERNAME=admin
      - ADMIN_PASSWORD_HASH=5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8
      - JWT_SECRET=your_jwt_secret_here_change_in_production
      - AUDIT_LOG_PATH=/app/logs/audit.log
      - RATE_LIMIT_REQUESTS_PER_MINUTE=100
      - RATE_LIMIT_REQUESTS_PER_HOUR=1000
      - RATE_LIMIT_LOGIN_ATTEMPTS=5
      - CORS_ALLOWED_ORIGINS=*
      - CORS_ALLOWED_METHODS=GET,POST,DELETE
      - CORS_ALLOWED_HEADERS=Authorization,Content-Type
    volumes:
      - findag_data:/app/data
      - findag_logs:/app/logs
      - ./configs:/app/configs:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - findag-network

  prometheus:
    image: prom/prometheus:latest
    container_name: findag-prometheus
    ports:
      - "9091:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - findag-network

  grafana:
    image: grafana/grafana:latest
    container_name: findag-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/datasources:/etc/grafana/provisioning/datasources:ro
    restart: unless-stopped
    depends_on:
      - prometheus
    networks:
      - findag-network

  # Optional: Redis for caching and session storage
  redis:
    image: redis:7-alpine
    container_name: findag-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - findag-network

volumes:
  findag_data:
    driver: local
  findag_logs:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  redis_data:
    driver: local

networks:
  findag-network:
    driver: bridge 