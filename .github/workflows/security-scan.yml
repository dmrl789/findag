name: Security Scanning

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run security scans weekly
    - cron: '0 2 * * 1'

jobs:
  # SAST (Static Application Security Testing)
  sast:
    name: SAST Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Run cargo audit
        run: cargo audit --deny warnings

      - name: Run cargo-geiger
        run: |
          cargo install cargo-geiger
          cargo geiger --output json > geiger-report.json

      - name: Upload SAST results
        uses: actions/upload-artifact@v3
        with:
          name: sast-results
          path: geiger-report.json
          retention-days: 30

  # Dependency scanning
  dependency-scan:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  # Container security scanning
  container-scan:
    name: Container Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t findag:security-scan -f docker/Dockerfile .

      - name: Run Trivy container scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'findag:security-scan'
          format: 'sarif'
          output: 'trivy-container-results.sarif'

      - name: Upload container scan results
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-container-results.sarif'

  # Secret scanning
  secret-scan:
    name: Secret Scanning
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run TruffleHog
        uses: trufflesecurity/trufflehog@main
        with:
          args: --only-verified --format json --output trufflehog-results.json

      - name: Upload secret scan results
        uses: actions/upload-artifact@v3
        with:
          name: secret-scan-results
          path: trufflehog-results.json
          retention-days: 30

  # License compliance
  license-scan:
    name: License Compliance
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install cargo-license
        run: cargo install cargo-license

      - name: Generate license report
        run: cargo license --json > license-report.json

      - name: Upload license report
        uses: actions/upload-artifact@v3
        with:
          name: license-report
          path: license-report.json
          retention-days: 30

  # Security policy check
  security-policy:
    name: Security Policy Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for security policy
        run: |
          if [ ! -f "SECURITY.md" ]; then
            echo "❌ SECURITY.md file not found"
            exit 1
          fi
          echo "✅ Security policy found"

      - name: Validate security policy format
        run: |
          # Basic validation of SECURITY.md
          if ! grep -q "## Reporting a Vulnerability" SECURITY.md; then
            echo "❌ Security policy missing vulnerability reporting section"
            exit 1
          fi
          echo "✅ Security policy format validated" 